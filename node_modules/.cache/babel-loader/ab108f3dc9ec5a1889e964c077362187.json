{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ctp/Documents/en-Espanol/src/Espanol.js\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nclass Controlled extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      translation: {\n        value: '',\n        error: ''\n      }\n    };\n  }\n\n  submitForm(event) {\n    // doesn't refresh the page\n    event.preventDefault(); // create a copy of state variables so we can build the error messages\n\n    let state_values = this.state; // do basic error checking\n    // if error is an empty string '', then that means there's no error\n    //state_values.first_name.error = validate_first_name(this.state.first_name.value);\n    //state_values.last_name.error =  validate_last_name(this.state.last_name.value);\n    // all error statuses should be updated here\n    // so we can set it\n\n    this.setState(state_values); //if(state_values.first_name.error !== '' ||\n    //state_values.last_name.error !== '')\n\n    {// has at least 1 error\n      // so quit\n      //return;\n    } // all error checks have been passed and have been found valid\n    // so proceed!\n    // \n\n    alert('translating.....'); // send the text that the user send to the google api\n  }\n\n  update_field(which, event) {\n    // do a convenience error check\n    if (event.target.value.length < 20) {\n      this.setState({\n        translation: {\n          value: event.target.value,\n          error: this.state[which].error\n        }\n      });\n    } // implied else\n    // do nothing!\n\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        this.submitForm(event);\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Translation\",\n            value: this.state.translation.value,\n            error: this.state.translation.error != '',\n            helperText: this.state.translation.error,\n            onChange: event => {\n              this.update_field('translation', event);\n            },\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Controlled;","map":{"version":3,"sources":["/Users/ctp/Documents/en-Espanol/src/Espanol.js"],"names":["Button","Grid","React","TextField","Controlled","Component","constructor","props","state","translation","value","error","submitForm","event","preventDefault","state_values","setState","alert","update_field","which","target","length","render"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAGA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACrB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AAChBC,QAAAA,KAAK,EAAE,EADS;AAEhBC,QAAAA,KAAK,EAAE;AAFS;AADJ,KAAb;AAMI;;AAGDC,EAAAA,UAAU,CAACC,KAAD,EACV;AACI;AACAA,IAAAA,KAAK,CAACC,cAAN,GAFJ,CAIC;;AACA,QAAIC,YAAY,GAAG,KAAKP,KAAxB,CALD,CAOC;AACA;AAEA;AACG;AAIH;AACA;;AACA,SAAKQ,QAAL,CAAcD,YAAd,EAjBD,CAmBC;AACG;;AACA,KACH;AACA;AAEA;AACC,KA1BF,CA4BC;AACA;AAGG;;AACAE,IAAAA,KAAK,CAAC,kBAAD,CAAL,CAjCJ,CAkCI;AACH;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQN,KAAR,EACZ;AACC;AACG,QAAGA,KAAK,CAACO,MAAN,CAAaV,KAAb,CAAmBW,MAAnB,GAA4B,EAA/B,EACA;AACC,WAAKL,QAAL,CAAc;AACXP,QAAAA,WAAW,EACX;AACFC,UAAAA,KAAK,EAAEG,KAAK,CAACO,MAAN,CAAaV,KADlB;AAEFC,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWW,KAAX,EAAkBR;AAFvB;AAFW,OAAd;AAOP,KAXE,CAaH;AACA;;AACI;;AAEDW,EAAAA,MAAM,GAAE;AACX,wBAAO;AAAM,MAAA,QAAQ,EAAGT,KAAD,IAAW;AAAC,aAAKD,UAAL,CAAgBC,KAAhB;AAAwB,OAApD;AAAA,6BACH,QAAC,IAAD;AACH,QAAA,SAAS,MADN;AAEH,QAAA,OAAO,EAAE,CAFN;AAAA,gCAGH,QAAC,IAAD;AACI,UAAA,IAAI,MADR;AAEI,UAAA,EAAE,EAAE,CAFR;AAAA,iCAGI,QAAC,SAAD;AACH,YAAA,SAAS,MADN;AAEH,YAAA,KAAK,EAAC,aAFH;AAGH,YAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,WAAX,CAAuBC,KAH3B;AAIH,YAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,WAAX,CAAuBE,KAAvB,IAAgC,EAJpC;AAKH,YAAA,UAAU,EAAE,KAAKH,KAAL,CAAWC,WAAX,CAAuBE,KALhC;AAMH,YAAA,QAAQ,EAAGE,KAAD,IAAW;AAAC,mBAAKK,YAAL,CAAkB,aAAlB,EAAiCL,KAAjC;AAAyC,aAN5D;AAOH,YAAA,OAAO,EAAC;AAPL;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAHG,eAeH,QAAC,IAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,OAAO,EAAC,QAFZ;AAAA,iCAGI,QAAC,MAAD;AACH,YAAA,KAAK,EAAC,SADH;AAEH,YAAA,OAAO,EAAC,WAFL;AAGH,YAAA,IAAI,EAAC,QAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAfG;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AA4BI;;AAjGmC;;AAoGxC,eAAeT,UAAf","sourcesContent":["import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass Controlled extends React.Component{\n    constructor(props){\n\tsuper(props);\n\tthis.state = {\n\t    translation: {\n\t\tvalue: '',\n\t\terror: ''\n\t    }\n\t};\n    }\n\n    \n    submitForm(event)\n    {\n        // doesn't refresh the page\n        event.preventDefault();\n\n\t    // create a copy of state variables so we can build the error messages\n\t    let state_values = this.state;\n\t\n\t    // do basic error checking\n\t    // if error is an empty string '', then that means there's no error\n\t\n\t    //state_values.first_name.error = validate_first_name(this.state.first_name.value);\n        //state_values.last_name.error =  validate_last_name(this.state.last_name.value);\n        \n\n\n\t    // all error statuses should be updated here\n\t    // so we can set it\n\t    this.setState(state_values);\n\t\n\t    //if(state_values.first_name.error !== '' ||\n        //state_values.last_name.error !== '')\n        {\n\t    // has at least 1 error\n\t    // so quit\n\t    \n\t    //return;\n\t    }\n\t\n\t    // all error checks have been passed and have been found valid\n\t    // so proceed!\n\n\n        // \n        alert('translating.....');\n        // send the text that the user send to the google api\n    }\n\n    update_field(which, event)\n    {\n\t    // do a convenience error check\n        if(event.target.value.length < 20)\n        {\n\t        this.setState({\n            translation: \n            {\n\t\t        value: event.target.value,\n\t\t        error: this.state[which].error\n\t\t    }\n\t    });\n\t}\n\t\n\t// implied else\n\t// do nothing!\n    }\n    \n    render(){\n\treturn <form onSubmit={(event) => {this.submitForm(event);}}>\n\t    <Grid\n\t\tcontainer\n\t\tspacing={4}>\n\t\t<Grid\n\t\t    item\n\t\t    lg={6}>\n\t\t    <TextField\n\t\t\tfullWidth\n\t\t\tlabel='Translation'\n\t\t\tvalue={this.state.translation.value}\n\t\t\terror={this.state.translation.error != ''}\n\t\t\thelperText={this.state.translation.error}\n\t\t\tonChange={(event) => {this.update_field('translation', event);}}\n\t\t\tvariant='outlined' />\n\t\t</Grid>\n\t\t<Grid\n\t\t    container\n\t\t    justify='center'>\n\t\t    <Button\n\t\t\tcolor='primary'\n\t\t\tvariant='contained'\n\t\t\ttype='submit'>\n\t\t\tSubmit\n\t\t    </Button>\n\t\t</Grid>\n\t    </Grid>\n\t</form>;\n    }\n}\n\nexport default Controlled;"]},"metadata":{},"sourceType":"module"}